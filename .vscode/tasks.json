{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start MCP Server with Live LLM",
            "type": "shell",
            "command": "./start_mcp_server_with_env.sh",
            "args": [],
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "Server started at http://localhost:(\\d+)",
                    "line": 1
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Starting server.*$",
                    "endsPattern": "^.*Server started at http://localhost:.*$"
                }
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "options": {
                "env": {
                    "USE_MOCK_GUIDELINE_RESPONSES": "false"
                }
            }
        },
        {
            "label": "Run Live LLM Integration Tests",
            "type": "shell",
            "command": "./test_live_llm_integration.py",
            "args": [
                "--verbose"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "options": {
                "env": {
                    "USE_MOCK_GUIDELINE_RESPONSES": "false"
                }
            }
        },
        {
            "label": "Start Flask App",
            "type": "shell",
            "command": "python3",
            "args": ["run.py"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "env": {
                    "PYTHONPATH": "${workspaceFolder}:/home/chris/.local/lib/python3.12/site-packages",
                    "PATH": "${env:PATH}:/home/chris/.local/bin"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Start Docker PostgreSQL",
            "type": "shell",
            "command": "docker",
            "args": ["compose", "up", "-d"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Stop Docker PostgreSQL",
            "type": "shell",
            "command": "docker",
            "args": ["compose", "down"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Test Database Connection",
            "type": "shell",
            "command": "docker",
            "args": ["exec", "proethica-postgres", "psql", "-U", "postgres", "-d", "ai_ethical_dm", "-c", "SELECT COUNT(*) FROM worlds;"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Debug Test",
            "type": "shell",
            "command": "python3",
            "args": ["test_debug.py"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "env": {
                    "PYTHONPATH": "${workspaceFolder}:/home/chris/.local/lib/python3.12/site-packages",
                    "PATH": "${env:PATH}:/home/chris/.local/bin"
                }
            },
            "problemMatcher": []
        }
    ]
}
